name: Release BINGO Images

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  release-bingo:
    runs-on: ubuntu-latest

    steps:
    - name: Download Cached Images
      uses: actions/cache@v3
      with:
        path: cache
        key: bingo-images-cache

    - name: Debug Cache Contents
      run: |
        echo "Listing cache contents:"
        if [ -d cache ]; then
          ls -l cache
        else
          echo "Cache directory is missing or empty."
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-bingo-${{ github.run_number }}
        release_name: "BINGO Images Release ${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Release 2 Images
      run: |
        mkdir -p release
        echo "Processing images from cache..."
        if [ -d cache ]; then
          images=$(ls cache | head -n 2)
          if [ -z "$images" ]; then
            echo "No images found in cache. Skipping release."
            exit 0
          fi
          for image in $images; do
            if [ -f "cache/$image" ]; then
              echo "Moving $image to release/"
              mv "cache/$image" "release/$image"
              echo "Deleting $image from cache/"
              rm -f "cache/$image" || echo "Warning: Could not delete cache/$image."
            else
              echo "Warning: File cache/$image does not exist. Skipping."
            fi
          done
        else
          echo "Cache directory is missing or empty. Exiting."
          exit 0
        fi

    - name: Upload Each Image
      run: |
        if [ "$(ls -A release)" ]; then
          for file in release/*; do
            echo "Uploading $file"
            UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
            FINAL_URL="${UPLOAD_URL%\{?name,label\}}?name=$(basename $file)"
            curl \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$FINAL_URL"
          done
        else
          echo "No files to upload."
        fi

    - name: Clean Up and Re-trigger Generate Workflow if Cache is Empty
      run: |
        rm -rf release
        if [ "$(ls -A cache 2>/dev/null)" ]; then
          echo "Cache still has images."
        else
          echo "Cache is empty. Triggering regeneration workflow..."
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/generate.yml/dispatches \
            -d '{"ref": "main"}'
